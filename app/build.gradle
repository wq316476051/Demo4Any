//apply plugin: 'com.android.application'
//apply {
//    plugin 'com.android.application'
//}
//apply(new Action<ObjectConfigurationAction>() {
//    @Override
//    void execute(ObjectConfigurationAction objectConfigurationAction) {
//        objectConfigurationAction.plugin('com.android.application')
//    }
//})
plugins {
    id 'com.android.application'
}

android { // --> AppExtension -> TestedExtension -> BaseExtension -> AndroidConfig
    compileSdkVersion 28         // BaseExtension
    buildToolsVersion "28.0.2"  // BaseExtension

    defaultConfig { // DefaultConfig -> BaseFlavor -> DefaultProductFlavor implements ProductFlavor
        applicationId "com.wang.demo"   // DefaultProductFlavor#setApplicationId(String applicationId)
        minSdkVersion 28    // BaseFlavor#minSdkVersion(int minSdkVersion)
        targetSdkVersion 28 // BaseFlavor#targetSdkVersion(int targetSdkVersion)
        versionCode 1       // DefaultProductFlavor#setVersionCode(Integer versionCode)
        versionName "1.0"  // DefaultProductFlavor#setVersionName(String versionName)

        // String mTestInstrumentationRunner;
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        sourceSets { // SourceSetContainer
            main { // SourceSet

            }
        }
    }
    productFlavors { // NamedDomainObjectContainer<ProductFlavor>

    }
    buildTypes { // BuildType 集合
//        debug {
//
//        }
        release { // BuildType
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

    compileOptions { // CompileOptions
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs { // NamedDomainObjectContainer<SigningConfig>
        release {

        }
    }
}
// ApplicationVariant 集合 ProjectFlavor + BuildType
// interface ApplicationVariant --> ApkVariant --> BaseVariant


configurations.all*.exclude group: 'com.android.support.constraint', module: 'constraint-layout-solver'

//configurations {
////    all*.exclude group: 'com.android.support.constraint', module: 'constraint-layout-solver'
//    all {
//        transitive true
//        exclude group: 'com.android.support.constraint', module: 'constraint-layout-solver'
//    }
//
//
////    releaseRuntimeClasspath - Resolved configuration for runtime for variant: release
////    \--- com.android.support.constraint:constraint-layout:1.1.3
////    \--- com.android.support.constraint:constraint-layout-solver:1.1.3
//}

repositories.flatDir dir: 'libs'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    implementation name: 'xxx', ext: 'aar'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    testImplementation('junit:junit:4.12')/* {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }*/

//    androidTestImplementation 'com.android.support:support-annotations:24.0.0'
//    androidTestImplementation 'com.android.support.test:rules:1.0.2'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//
//    androidTestImplementation 'androidx.test:core:' + rootProject.coreVersion;
//    androidTestImplementation 'androidx.test.ext:junit:' + rootProject.extJUnitVersion;
//    androidTestImplementation 'androidx.test:runner:' + rootProject.runnerVersion;
//    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion;

    // 为了查看Android Gradle插件的源码
    implementation "com.android.tools.build:gradle:${rootProject.gradle_version}"
//    implementation gradleApi()
}