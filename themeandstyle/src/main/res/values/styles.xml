<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="android:Theme.Material.Light.DarkActionBar">
        <!-- Customize your theme here. -->

    </style>

    <style name="AppTheme.MyDialogActivity" parent="android:Theme.Material.Light.Dialog">

        <!--<item name="android:background">#f00</item>-->     <!--设置Activity背景色-->
        <item name="android:minWidth">300dp</item>
        <item name="android:minHeight">200dp</item>
        <item name="android:width">80dp</item>
        <item name="android:height">80dp</item>

        
        <!--PhoneWindow: DecorView-->
        <!--params.windowAnimations = a.getResourceId(R.styleable.Window_windowAnimationStyle, 0);-->
        <!--<item name="android:windowAnimationStyle"></item>-->

        <!--mBackgroundResource = a.getResourceId(R.styleable.Window_windowBackground, 0);-->
        <!--<item name="android:windowBackground">@color/colorPrimary</item>-->   <!--必须是resId，DecorView的背景--><!--与android:background冲突，且优先级次之-->

        <!--mFrameResource = a.getResourceId(R.styleable.Window_windowFrame, 0);-->
        <!--<item name="android:windowFrame"></item>-->

        <!--mElevation = a.getDimension(R.styleable.Window_windowElevation, 0);-->
        <item name="android:windowElevation">@dimen/window_elevation</item>     <!--Window 的Z轴高度，影响阴影-->

        <!--mClipToOutline = a.getBoolean(R.styleable.Window_windowClipToOutline, false);-->
        <item name="android:windowClipToOutline">true</item>

        <!--mTextColor = a.getColor(R.styleable.Window_textColor, Color.TRANSPARENT);-->
        <item name="android:textColor">#00f</item>      <!--文字眼色-->



        <!--PhoneWindow: ContentParent generateLayout(DecorView)-->
        <!--mIsFloating = a.getBoolean(R.styleable.Window_windowIsFloating, false);-->
        <item name="android:windowIsFloating">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowNoTitle, false)) {
            requestFeature(FEATURE_NO_TITLE);-->
        <item name="android:windowNoTitle">true</item>          <!--是否显示TitleBar-->

        <!--if (a.getBoolean(R.styleable.Window_windowActionBar, false)) {
            // Don't allow an action bar if there is no title.
            requestFeature(FEATURE_ACTION_BAR);-->
        <item name="android:windowActionBar">true</item>        <!--是否显示ActionBar-->

        <!--final boolean noActionBar = !hasFeature(FEATURE_ACTION_BAR) || hasFeature(FEATURE_NO_TITLE);-->

        <!--if (a.getBoolean(R.styleable.Window_windowActionBarOverlay, false)) {
            requestFeature(FEATURE_ACTION_BAR_OVERLAY);-->
        <item name="android:windowActionBarOverlay">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowActionModeOverlay, false)) {
            requestFeature(FEATURE_ACTION_MODE_OVERLAY);-->
        <item name="android:windowActionModeOverlay">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowSwipeToDismiss, false)) {
            requestFeature(FEATURE_SWIPE_TO_DISMISS);-->
        <item name="android:windowSwipeToDismiss">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowFullscreen, false)) {
            setFlags(FLAG_FULLSCREEN, FLAG_FULLSCREEN & (~getForcedWindowFlags()));-->
        <item name="android:windowFullscreen">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowTranslucentStatus, false)) {
            setFlags(FLAG_TRANSLUCENT_STATUS, FLAG_TRANSLUCENT_STATUS & (~getForcedWindowFlags()));-->
        <item name="android:windowTranslucentStatus">true</item>        <!--StatusBar透明，显示在Content之上-->

        <!--if (a.getBoolean(R.styleable.Window_windowTranslucentNavigation, false)) {
            setFlags(FLAG_TRANSLUCENT_NAVIGATION, FLAG_TRANSLUCENT_NAVIGATION & (~getForcedWindowFlags()));-->
        <item name="android:windowTranslucentNavigation">true</item>    <!--NavigationBar透明，显示在Content之上-->

        <!--if (a.getBoolean(R.styleable.Window_windowOverscan, false)) {
            setFlags(FLAG_LAYOUT_IN_OVERSCAN, FLAG_LAYOUT_IN_OVERSCAN&(~getForcedWindowFlags()));-->
        <item name="android:windowOverscan">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowShowWallpaper, false)) {
            setFlags(FLAG_SHOW_WALLPAPER, FLAG_SHOW_WALLPAPER&(~getForcedWindowFlags()));-->
        <item name="android:windowShowWallpaper">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowEnableSplitTouch,
                getContext().getApplicationInfo().targetSdkVersion
                        >= android.os.Build.VERSION_CODES.HONEYCOMB)) {
            setFlags(FLAG_SPLIT_TOUCH, FLAG_SPLIT_TOUCH&(~getForcedWindowFlags()));-->
        <item name="android:windowEnableSplitTouch">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowContentTransitions, false)) {
            requestFeature(FEATURE_CONTENT_TRANSITIONS);-->
        <item name="android:windowContentTransitions">true</item>

        <!--if (a.getBoolean(R.styleable.Window_windowActivityTransitions, false)) {
            requestFeature(FEATURE_ACTIVITY_TRANSITIONS);-->
        <item name="android:windowActivityTransitions">true</item>

        <!--mIsTranslucent = a.getBoolean(R.styleable.Window_windowIsTranslucent, false);-->
        <item name="android:windowIsTranslucent">true</item>

        <!--mStatusBarColor = a.getColor(R.styleable.Window_statusBarColor, 0xFF000000);-->
        <item name="android:statusBarColor">#ff0</item>     <!--如果 setStatusBarColor()被调用，则无效-->

        <!--mNavigationBarColor = a.getColor(R.styleable.Window_navigationBarColor, 0xFF000000);-->
        <item name="android:navigationBarColor">#ff0</item>     <!--如果 setNavigationBarColor()被调用，则无效-->

        <!--a.getBoolean(R.styleable.Window_windowLightStatusBar, false)-->

        <!--a.getBoolean(R.styleable.Window_windowCloseOnTouchOutside, false)-->

        <!--params.softInputMode = a.getInt(R.styleable.Window_windowSoftInputMode, params.softInputMode);-->

        <!--a.getBoolean(R.styleable.Window_backgroundDimEnabled, mIsFloating)-->
        <item name="android:backgroundDimEnabled">true</item>       <!--后面的Activity变暗-->

        <!--params.dimAmount = a.getFloat(android.R.styleable.Window_backgroundDimAmount, 0.5f);-->
        <item name="android:backgroundDimAmount">0.5</item>       <!--后面的Activity变暗的程度-->

        <!--params.windowAnimations = a.getResourceId(R.styleable.Window_windowAnimationStyle, 0);-->

        <!--mBackgroundResource = a.getResourceId(
                            R.styleable.Window_windowBackground, 0);-->

    </style>

</resources>
